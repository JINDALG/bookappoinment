# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2017-05-05 15:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import multiselectfield.db.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[(b'Under Process', b'Under Process'), (b'Booked', b'Booked'), (b'Rejected', b'Rejected'), (b'Cancel', b'Cancel'), (b'Missed', b'Missed'), (b'Attended', b'Attended')], default=b'Under Process', max_length=15)),
                ('hour_consumed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'abstract': False,
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='AppointmentShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'Under Process', b'Under Process'), (b'Booked', b'Booked'), (b'Rejected', b'Rejected'), (b'Cancel', b'Cancel'), (b'Missed', b'Missed'), (b'Attended', b'Attended')], default=b'Under Process', max_length=15)),
                ('remark', models.TextField()),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Appointment')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'abstract': False,
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='PersonalAssistant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('available_days', multiselectfield.db.fields.MultiSelectField(choices=[(b'mon', b'Monday'), (b'tue', b'Tuesday'), (b'wed', b'Wednesday'), (b'thu', b'Thursday'), (b'fri', b'Friday'), (b'sat', b'Saturday'), (b'sun', b'Sunday')], max_length=27)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'abstract': False,
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'abstract': False,
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='RoleSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_approved', models.BooleanField(default=False)),
                ('personal_assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PersonalAssistant')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Role')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('price', models.IntegerField()),
                ('time_duration', models.IntegerField()),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'abstract': False,
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='ServiceSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_approved', models.BooleanField(default=False)),
                ('personal_assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PersonalAssistant')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Service')),
            ],
        ),
        migrations.CreateModel(
            name='Shopper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('allergies', models.CharField(max_length=200)),
                ('brand_preferred', models.CharField(max_length=200)),
                ('instruction', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'abstract': False,
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'abstract': False,
                'get_latest_by': 'modified',
            },
        ),
        migrations.CreateModel(
            name='SkillRoleRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('commission', models.IntegerField()),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Role')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=50)),
                ('buffer_time', models.IntegerField(default=30)),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('working_days', multiselectfield.db.fields.MultiSelectField(choices=[(b'mon', b'Monday'), (b'tue', b'Tuesday'), (b'wed', b'Wednesday'), (b'thu', b'Thursday'), (b'fri', b'Friday'), (b'sat', b'Saturday'), (b'sun', b'Sunday')], max_length=27)),
                ('services', models.ManyToManyField(to='core.Service')),
            ],
        ),
        migrations.CreateModel(
            name='StoreSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_approved', models.BooleanField(default=False)),
                ('personal_assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PersonalAssistant')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Store')),
            ],
        ),
        migrations.AddField(
            model_name='registry',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Service'),
        ),
        migrations.AddField(
            model_name='registry',
            name='shopper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shopper'),
        ),
        migrations.AddField(
            model_name='appointmentship',
            name='personal_assistant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PersonalAssistant'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Service'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='shopper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shopper'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Store'),
        ),
        migrations.AlterUniqueTogether(
            name='storesubscription',
            unique_together=set([('personal_assistant', 'store')]),
        ),
        migrations.AlterUniqueTogether(
            name='store',
            unique_together=set([('name', 'address')]),
        ),
        migrations.AlterUniqueTogether(
            name='skillrolerelation',
            unique_together=set([('role', 'skill')]),
        ),
        migrations.AlterUniqueTogether(
            name='servicesubscription',
            unique_together=set([('personal_assistant', 'service')]),
        ),
        migrations.AlterUniqueTogether(
            name='rolesubscription',
            unique_together=set([('personal_assistant', 'role')]),
        ),
        migrations.AlterUniqueTogether(
            name='registry',
            unique_together=set([('shopper', 'service')]),
        ),
    ]
